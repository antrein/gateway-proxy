name: Golang CI/CD Pipeline

on:
  push:
    branches:
      - master
      - main
      - staging
  pull_request:
    branches:
      - master
      - main
      - staging
    types: [closed]

env:
  PROJECT_NAME: ${{ github.event.repository.name }}
  PORT: 8080
  BRANCH: ${{ github.ref == 'refs/heads/staging' && 'staging' || 'production' }}
  REGISTRY_REPO: antrein

  GCP_REGION: asia-southeast1
  GCP_ZONE: asia-southeast1-a

  AWS_REGION: asia-southeast-1

jobs:
  setup-environment:
    if: github.event.pull_request.merged == false
    runs-on: ubuntu-latest
    outputs:
      IMAGE_TAG: ${{ steps.set-env.outputs.IMAGE_TAG }}
      IMAGE_NAME: ${{ steps.set-env.outputs.IMAGE_NAME }}
      SHORT_SHA: ${{ steps.set-env.outputs.SHORT_SHA }}
      BRANCH: ${{ env.BRANCH }}
    steps:
      - name: Set environment variables
        id: set-env
        run: |
          SHORT_SHA=$(echo "${{ github.sha }}" | cut -c1-7)
          IMAGE_TAG="${{ env.BRANCH }}:$SHORT_SHA"
          IMAGE_NAME="reyshazni/${{ github.event.repository.name }}-$IMAGE_TAG"
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_OUTPUT
          echo "SHORT_SHA=$SHORT_SHA" >> $GITHUB_OUTPUT
          echo "IMAGE_NAME=$IMAGE_NAME" >> $GITHUB_OUTPUT

  dockerize-and-push:
    needs: setup-environment
    environment: ${{ needs.setup-environment.outputs.BRANCH }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2

      - name: Login Docker
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker Image
        env: 
          IMAGE_NAME: ${{ needs.setup-environment.outputs.IMAGE_NAME }}
        run: |
          docker build -t $IMAGE_NAME .
          docker push $IMAGE_NAME
          echo "IMAGE_NAME=$IMAGE_NAME" >> $GITHUB_OUTPUT

      - name: Push YAML to another GitHub repo
        if: github.ref != 'refs/heads/staging'
        env:
          GIT_USER: reyshazni
          GIT_TOKEN: ${{ vars.GIT_PAT }}
          GIT_EMAIL: reyshazni@gmail.com
        run: |
          git config --global user.email ${GIT_EMAIL}
          git config --global user.name ${GIT_USER}
          git clone https://github.com/antrein/prod-yml.git
          cp ./k8s/multi.yml ./prod-yml/gateway-proxy/multi.yml
          cp ./k8s/shared.yml ./prod-yml/gateway-proxy/shared.yml
          cd ./prod-yml
          git add .
          git commit -m "Update Kubernetes YAML file"
          git push https://${GIT_USER}:${GIT_TOKEN}@github.com/antrein/prod-yml.git